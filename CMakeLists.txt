cmake_minimum_required(VERSION 3.28)
project("wayland_module")

set(CMAKE_CXX_STANDARD 23)
set(CMAKE_CXX_STANDARD_REQUIRED YES)
set(CMAKE_CXX_EXTENSIONS OFF)

find_package(ECM REQUIRED CONFIG)
set(CMAKE_MODULE_PATH ${ECM_MODULE_PATH})
find_package(PkgConfig REQUIRED MODULE)
find_package(Vulkan REQUIRED MODULE COMPONENTS glslc)
find_package(Wayland REQUIRED MODULE COMPONENTS Client Cursor)
find_package(WaylandProtocols REQUIRED MODULE)
find_package(WaylandScanner REQUIRED MODULE)
find_package(X11 REQUIRED MODULE COMPONENTS xkbcommon)

add_executable(demo main.cpp vulkan-storage.cpp)
ecm_add_wayland_client_protocol(demo PROTOCOL ${WaylandProtocols_DATADIR}/stable/xdg-shell/xdg-shell.xml BASENAME xdg-shell)
ecm_add_wayland_client_protocol(demo PROTOCOL ${WaylandProtocols_DATADIR}/staging/content-type/content-type-v1.xml BASENAME content-type)
ecm_add_wayland_client_protocol(demo PROTOCOL ${WaylandProtocols_DATADIR}/unstable/xdg-decoration/xdg-decoration-unstable-v1.xml BASENAME xdg-decoration)
target_compile_definitions(demo PRIVATE VK_NO_PROTOTYPES VK_USE_PLATFORM_WAYLAND_KHR VULKAN_HPP_NO_STRUCT_CONSTRUCTORS VULKAN_HPP_NO_UNION_CONSTRUCTORS)
target_include_directories(demo PRIVATE ${CMAKE_CURRENT_BINARY_DIR})
target_link_libraries(demo Vulkan::Headers Wayland::Client Wayland::Cursor X11::xkbcommon)
target_sources(demo PRIVATE FILE_SET CXX_MODULES BASE_DIRS ${CMAKE_CURRENT_SOURCE_DIR} ${Vulkan_INCLUDE_DIR} FILES ${Vulkan_INCLUDE_DIR}/vulkan/vulkan.cppm vulkan.cppm wayland.cppm wayland/common.cppm wayland/display.cppm wayland/seat.cppm wayland/window.cppm xkb.cppm)
